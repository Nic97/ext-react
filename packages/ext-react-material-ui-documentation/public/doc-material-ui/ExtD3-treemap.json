{
 "name": "Ext.d3.hierarchy.TreeMap",
 "xtype": "d3-treemap",
 "reactname": "ExtD3-treemap",
 "alias": "widget.d3-treemap",
 "extended": "Ext.d3.hierarchy.Hierarchy,Ext.d3.svg.Svg,Ext.d3.Component,Ext.d3.ComponentBase,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base",
 "extenders": "Ext.pivot.d3.TreeMap",
 "extends": "Ext.d3.hierarchy.Hierarchy",
 "mixed": "Ext.Mixin,Ext.d3.mixin.ToolTip,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful",
 "requires": "Ext.d3.Helpers",
 "text": "The 'd3-treemap' component uses D3's\n[TreeMap Layout](https://github.com/d3/d3-hierarchy/#treemap)\nto recursively subdivide area into rectangles, where the area of any node in the tree\ncorresponds to its value.\n\n    @example\n    Ext.create('Ext.panel.Panel', {\n        renderTo: Ext.getBody(),\n        title: 'TreeMap Chart',\n        height: 750,\n        width: 750,\n        layout: 'fit',\n        items: [\n            {\n                xtype: 'd3-treemap',\n                tooltip: {\n                    renderer: function (component, tooltip, node) {\n                        tooltip.setHtml(node.data.get('text'));\n                    }\n                },\n                nodeValue: function (record) {\n                    // The value in your data to derive the size of the tile from.\n                    return record.get('value');\n                },\n                store: {\n                    type: 'tree',\n                    data: [\n                        {  text: 'Hulk',\n                           value : 5,\n                           children: [\n                                { text: 'The Leader', value: 3 },\n                                { text: 'Abomination', value: 2 },\n                                { text: 'Sandman', value: 1 }\n                            ]\n                        },\n                        {   text: 'Vision',\n                            value : 4,\n                            children: [\n                                { text: 'Kang', value: 4 },\n                                { text: 'Magneto', value: 3 },\n                                { text: 'Norman Osborn', value: 2 },\n                                { text: 'Anti-Vision', value: 1 }\n                            ]\n                        },\n                        {   text: 'Ghost Rider',\n                            value : 3,\n                            children: [\n                                { text: 'Mephisto', value: 1 }\n                            ]\n                        },\n                        {   text: 'Loki',\n                            value : 2,\n                            children: [\n                                { text: 'Captain America', value: 3 },\n                                { text: 'Deadpool', value: 4 },\n                                { text: 'Odin', value: 5 },\n                                { text: 'Scarlet Witch', value: 2 },\n                                { text: 'Silver Surfer', value: 1 }\n                            ]\n                        },\n                        {   text: 'Daredevil',\n                            value : 1,\n                            children: [\n                                { text: 'Purple Man', value: 4 },\n                                { text: 'Kingpin', value: 3 },\n                                { text: 'Namor', value: 2 },\n                                { text: 'Sabretooth', value: 1 }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ]\n    });\n"
}